const {
  WebMidi
} = require("webmidi")
const fs = require("fs")
const chunk = require("lodash/chunk")

const device = "Launchpad Pro MK3 LPProMK3 MIDI"
const manufacturer = [0x00, 0x20, 0x29]
// const file = fs.readFileSync("/Users/peter/Downloads/c3-moment-ch1 (2).syx") // same as out.syx
// const file = fs.readFileSync("/Users/peter/Downloads/c3-moment-ch1 (3).syx") // fader at top
// const file = fs.readFileSync("/Users/peter/Downloads/c3-moment-ch1 (5).syx") // fader (ch16) at top
// const file = fs.readFileSync("/Users/peter/Downloads/c3-moment-ch1 (6).syx") // fader (ch5 cc15) at 2nd from top
// const file = fs.readFileSync("/Users/peter/Downloads/c3-moment-ch1 (7).syx") // bi fader (ch5 cc15) at 2nd from top
const file = fs.readFileSync("/Users/peter/Downloads/abc.syx") // same as out.syx but named "0"
// const file = fs.readFileSync("/Users/peter/Downloads/out.syx")
// const file = fs.readFileSync("/Users/peter/Downloads/16x16 drums - pw.syx")

let head = file.slice(0, 28)
let body = file.slice(28, -1)
let tail = file.slice(-1)
console.log(toHex(head).join(' '))
console.log(chunk(toHex(body), 8).map(a => a.join(' ')))
console.log(toHex(tail).join(' '))

// f0 00 20 29 02 0e 05 01 08 61 62 63 00 00 7f 00 00 2d
//                          \ 08-3 = layout 5

const outfile = [
/* head
0xf0, 0x00, 0x20, 0x29, 0x02, 0x0e, 0x05, 0x01, 0x7f, 0x63, 0x33, 0x2d, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x63, 0x68, 0x31, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x2d,
sysx  <-manufacturer->  <--always the same--->  mode# <-----------------------------name----------------------------------------->  <----- end custom mode header --->
*/
  /*0xf0, 0x00, 0x20, 0x29, */0x02, 0x0e, 0x05, 0x01, 0x08, 0x63, 0x33, 0x2d, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x63, 0x68, 0x31, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x2d,
  0x51, 0x00, 0x01, 0x3d, 0x00, 0x00, 0x00, 0x05,
  0x52, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x53, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x54, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x55, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x56, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x57, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x58, 0x00, 0x01, 0x3a, 0x00, 0x00, 0x00, 0x05,
  0x47, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x48, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x49, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x4a, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x4b, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x4c, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x4d, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x4e, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x3d, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x3e, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x3f, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x40, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x41, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x42, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x43, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x44, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x33, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x34, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x35, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x36, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x37, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x38, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x39, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x3a, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x29, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x2a, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x2b, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x2c, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x2d, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x2e, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x2f, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x30, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x1f, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x20, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x21, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x22, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x23, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x24, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x25, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x26, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x15, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x16, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x17, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x18, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x19, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x1a, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x1b, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x1c, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x0b, 0x00, 0x01, 0x3f, 0x00, 0x00, 0x00, 0x05,
  0x0c, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x0d, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x0e, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x0f, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x10, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x11, 0x00, 0x01, 0x3c, 0x00, 0x00, 0x00, 0x05,
  0x12, 0x00, 0x01, 0x3b, 0x00, 0x00, 0x00, 0x03,
/* pos  chan  type  note  pdmd              colr */

/* slider
 0x00, 0x0f, 0x00, 0x07, 0x02, 0x7f, 0x00, 0x15,
 row   chan        cc#   widg              colr
*/

  /*0xf7*/
]
// fs.writeFileSync('/Users/peter/Downloads/out.syx', Buffer.from(outfile))
// console.log(file.length)

// c1: 18, c#1: 19
// e1: 1c, f1: 1d
// g#1: 20, a1: 21
// c2: 24, c#2: 25
// e2: 28, f2: 29
// g#2: 2c, a2: 2d
// c3: 30, c#3 31

function toHex(bytes) {
  let out = []
  bytes.forEach(b => {
    let hex = b.toString(16).padStart(2, '0')
    out.push(hex)
  })
  return out
}
async function start() {
  await WebMidi.enable({
    sysex: true
  })
  let input = WebMidi.getInputByName(device)
  let output = WebMidi.getOutputByName(device)
  let channels = {
    in: input.channels[1],
    out: output.channels[1],
    output: output
  }
  // channels.in.addListener("noteon", noteOn)
  // channels.in.addListener("noteoff", noteOff)
  channels.in.addListener("midimessage", midimessage(channels))

  console.log("in", input.name, channels.in.number)
  console.log("out", output.name, channels.out.number)

}

function noteOn(e) {
  // console.log(`Received 'noteon' message`, e)
  console.log(`Received 'noteon' message (${e.note.name}${e.note.octave} ${e.rawAttack}).`)
}
function noteOff(e) {
  console.log(`Received 'noteoff' message (${e.note.name}${e.note.octave}).`)
}
function midimessage(channels) {
  return function(e) {
    try {
      let data = toHex(e.rawData)
      console.log("received", data)
      if (data[0] == "90" && data[1] == "24") {
        console.log("sending")
        // let status = 0xf0
        // let message = [0x7e, 0x7f, 0x06, 0x01, 0xf7]
        // let status = 240
        // let message = [ 126, 127, 6, 1, 247 ]
        // console.log(status, message)
        // channels.out.send(status, message)

        // channels.out.send(0x90, [0x0b, 0x00])
        // channels.out.send(0x90, [0x51, 0x00])
        channels.output.sendSysex(manufacturer, outfile)
        // channels.out.sendNoteOn(0x0b, {rawAttack: 0x05})
      }
    } catch (e) {
      console.error(e)
    }
  }
}

start()
  .then(() => console.log("enabled"))
  .catch(err => {
    console.error(err)
    return WebMidi.disable()
  })
